// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  bio           String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]
  comments      Comment[]
}

model Post {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  content       String
  published     Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  author        User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String
  comments      Comment[]
  tags          Tag[]     @relation("PostToTag")
}

model Comment {
  id            String    @id @default(cuid())
  content       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  author        User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String
  post          Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId        String
}

model Tag {
  id            String    @id @default(cuid())
  name          String    @unique
  posts         Post[]    @relation("PostToTag")
}
